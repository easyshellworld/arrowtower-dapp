version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:16-alpine
    container_name: arrowtower-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-arrowtower}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js 应用
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: arrowtower-app
    restart: unless-stopped
    ports:
      - "30000:3000"   
    environment:
      # 数据库连接
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-arrowtower}?schema=public

      # NextAuth 配置
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}

      # Web3 / 区块链配置
      PRIVATE_KEY: ${PRIVATE_KEY}
      CONTRACT_ADDRESS: ${CONTRACT_ADDRESS}

      # 其他环境变量
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        npx prisma migrate deploy &&
        node server.js
      "
    volumes:
      - ./prisma:/app/prisma   # 注意：会覆盖容器内 /app/prisma
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s   # 给迁移和 Next 启动更多时间

volumes:
  postgres_data:
    driver: local
